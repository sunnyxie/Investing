CREATE OR REPLACE PACKAGE  DA_INVOICELINE AS
/******************************************************************************
   NAME:       DA_INVOICELINE
   PURPOSE:

   REVISIONS:
   Ver / Date / Author / Description
   ---------------------------------
   1.0 / March-14-17 / stevek / Created	
******************************************************************************/

TYPE sqlcur IS REF CURSOR; 

PROCEDURE CREATE_ROW(
	o_id OUT INVOICE_LINE.ID%TYPE,
	i_line_num IN INVOICE_LINE.LINE_NUM%TYPE,
	i_category IN INVOICE_LINE.CATEGORY%TYPE,
	i_sub_category IN INVOICE_LINE.SUB_CATEGORY%TYPE,
	i_description IN INVOICE_LINE.DESCRIPTION%TYPE,
	i_amount IN INVOICE_LINE.AMOUNT%TYPE,
	i_invoice_id IN INVOICE_LINE.INVOICE_ID%TYPE);

PROCEDURE READALL(

cur_out OUT DA_INVOICELINE.sqlcur);

PROCEDURE READBYPK(
	i_id IN INVOICE_LINE.ID%TYPE,
cur_out OUT DA_INVOICELINE.sqlcur);

PROCEDURE READEMPTY(
cur_out OUT DA_INVOICELINE.sqlcur);

PROCEDURE UPDATE_ROW(
	i_id IN INVOICE_LINE.ID%TYPE,
	i_line_num IN INVOICE_LINE.LINE_NUM%TYPE,
	i_category IN INVOICE_LINE.CATEGORY%TYPE,
	i_sub_category IN INVOICE_LINE.SUB_CATEGORY%TYPE,
	i_description IN INVOICE_LINE.DESCRIPTION%TYPE,
	i_amount IN INVOICE_LINE.AMOUNT%TYPE,
	i_invoice_id IN INVOICE_LINE.INVOICE_ID%TYPE);
    
PROCEDURE DELETE_ROW(
	i_id IN INVOICE_LINE.ID%TYPE);
    
END DA_INVOICELINE;
|
CREATE OR REPLACE PACKAGE BODY DA_INVOICELINE AS

PROCEDURE CREATE_ROW(
	o_id OUT INVOICE_LINE.ID%TYPE,
	i_line_num IN INVOICE_LINE.LINE_NUM%TYPE,
	i_category IN INVOICE_LINE.CATEGORY%TYPE,
	i_sub_category IN INVOICE_LINE.SUB_CATEGORY%TYPE,
	i_description IN INVOICE_LINE.DESCRIPTION%TYPE,
	i_amount IN INVOICE_LINE.AMOUNT%TYPE,
	i_invoice_id IN INVOICE_LINE.INVOICE_ID%TYPE) IS
BEGIN
SELECT INVOICE_LINE_SEQ.NEXTVAL INTO o_ID FROM DUAL;

	INSERT INTO INVOICE_LINE 
	 ( 
		ID,
		LINE_NUM,
		CATEGORY,
		SUB_CATEGORY,
		DESCRIPTION,
		AMOUNT,
		INVOICE_ID	 ) 
	 VALUES 
	 ( 
		o_id,
		i_line_num,
		i_category,
		i_sub_category,
		i_description,
		i_amount,
		i_invoice_id	 );


END;

PROCEDURE READALL(

cur_out OUT DA_INVOICELINE.sqlcur) IS
BEGIN
OPEN cur_out FOR
	SELECT ID,LINE_NUM,CATEGORY,SUB_CATEGORY,DESCRIPTION,AMOUNT,INVOICE_ID
	FROM INVOICE_LINE;
END;

PROCEDURE READBYPK(
	i_id IN INVOICE_LINE.ID%TYPE,
cur_out OUT DA_INVOICELINE.sqlcur) IS
BEGIN
OPEN cur_out FOR
	SELECT ID,LINE_NUM,CATEGORY,SUB_CATEGORY,DESCRIPTION,AMOUNT,INVOICE_ID
	FROM INVOICE_LINE WHERE 		ID = i_id;
END;

PROCEDURE READEMPTY(
cur_out OUT DA_INVOICELINE.sqlcur) IS
BEGIN
OPEN cur_out FOR
	SELECT ID,LINE_NUM,CATEGORY,SUB_CATEGORY,DESCRIPTION,AMOUNT,INVOICE_ID
	FROM INVOICE_LINE WHERE rownum < 1;
END;

PROCEDURE UPDATE_ROW(
	i_id IN INVOICE_LINE.ID%TYPE,
	i_line_num IN INVOICE_LINE.LINE_NUM%TYPE,
	i_category IN INVOICE_LINE.CATEGORY%TYPE,
	i_sub_category IN INVOICE_LINE.SUB_CATEGORY%TYPE,
	i_description IN INVOICE_LINE.DESCRIPTION%TYPE,
	i_amount IN INVOICE_LINE.AMOUNT%TYPE,
	i_invoice_id IN INVOICE_LINE.INVOICE_ID%TYPE) IS
BEGIN
UPDATE INVOICE_LINE
	 SET
		LINE_NUM = i_line_num,
		CATEGORY = i_category,
		SUB_CATEGORY = i_sub_category,
		DESCRIPTION = i_description,
		AMOUNT = i_amount,
		INVOICE_ID = i_invoice_id
	 WHERE 
		ID = i_id;


END;

PROCEDURE DELETE_ROW(
	i_id IN INVOICE_LINE.ID%TYPE) IS
BEGIN
DELETE FROM INVOICE_LINE WHERE 
	ID = i_id;


END;

END DA_INVOICELINE;



